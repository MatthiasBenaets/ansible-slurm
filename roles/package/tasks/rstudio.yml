---
- name: Ensure required base packages are installed
  become: true
  ansible.builtin.apt:
    name:
      - apt-utils
      - wget
      - tar
      - cmake
      - build-essential
      - nodejs
      - npm
      - git
      - rsync
    state: present
    update_cache: true
  when: "'controller' in group_names"
  tags: [package, rstudio]

- name: Remove conflicting package cmdtest
  become: true
  ansible.builtin.apt:
    name: cmdtest
    state: absent
  when: "'controller' in group_names"
  tags: [package, rstudio]

- name: Create build directory
  become: true
  ansible.builtin.file:
    path: "{{ rstudio_src_dir }}"
    state: directory
    mode: "0755"
  when: "'controller' in group_names"
  tags: [package, rstudio]

- name: Download RStudio source tarball
  become: true
  ansible.builtin.get_url:
    url: "https://codeload.github.com/rstudio/rstudio/legacy.tar.gz/refs/tags/{{ rstudio_version | urlencode }}"
    dest: "{{ rstudio_src_dir }}/rstudio.tar.gz"
    mode: "0644"
  when: "'controller' in group_names"
  tags: [package, rstudio]

- name: Extract RStudio source
  become: true
  ansible.builtin.unarchive:
    src: "{{ rstudio_src_dir }}/rstudio.tar.gz"
    dest: "{{ rstudio_src_dir }}"
    remote_src: true
  register: rstudio_extract
  when: "'controller' in group_names"
  tags: [package, rstudio]

- name: Find extracted RStudio directory
  become: true
  ansible.builtin.find:
    paths: "{{ rstudio_src_dir }}"
    file_type: directory
    patterns: "rstudio-*"
  register: rstudio_dirs
  when: "'controller' in group_names"
  tags: [package, rstudio]

- name: Set rstudio_src_dir fact
  become: true
  ansible.builtin.set_fact:
    rstudio_src_dir: "{{ (rstudio_dirs.files | sort(attribute='mtime') | last).path }}"
  when: "'controller' in group_names"
  tags: [package, rstudio]

- name: Run install-dependencies script
  become: true
  ansible.builtin.command: ./install-dependencies-noble
  args:
    chdir: "{{ rstudio_src_dir }}/dependencies/linux"
  changed_when: false
  when: "'controller' in group_names"
  tags: [package, rstudio]

- name: Create install prefix
  become: true
  ansible.builtin.file:
    path: "{{ rstudio_install_path }}"
    state: directory
    mode: "0755"
  when: "'controller' in group_names"
  tags: [package, rstudio]

- name: Create build subdir
  become: true
  ansible.builtin.file:
    path: "{{ rstudio_src_dir }}/build"
    state: directory
    mode: "0755"
  when: "'controller' in group_names"
  tags: [package, rstudio]

- name: Configure CMake
  become: true
  ansible.builtin.command: >
    cmake ..
    -DRSTUDIO_TARGET=Server
    -DCMAKE_BUILD_TYPE=Release
    -DCMAKE_INSTALL_PREFIX={{ rstudio_install_path }}
  args:
    chdir: "{{ rstudio_src_dir }}/build"
  changed_when: false
  when: "'controller' in group_names"
  tags: [package, rstudio]

- name: Compile and install RStudio Server
  become: true
  ansible.builtin.command: make install
  environment:
    NODE_OPTIONS: "--max-old-space-size=2000"
  args:
    chdir: "{{ rstudio_src_dir }}/build"
  changed_when: false
  when: "'controller' in group_names"
  tags: [package, rstudio]

- name: Ensure rstudio-server system user exists
  become: true
  ansible.builtin.user:
    name: "rstudio-server"
    system: true
    shell: /usr/sbin/nologin
    create_home: false
  when: "'controller' in group_names or 'nodes' in group_names"
  tags: [package, rstudio]

- name: Create log directory
  become: true
  ansible.builtin.file:
    path: "/var/log/rstudio/rstudio-server"
    state: directory
    owner: "rstudio-server"
    group: "rstudio-server"
    mode: "0755"
  when: "'controller' in group_names"
  tags: [package, rstudio]

- name: Create lib directory
  become: true
  ansible.builtin.file:
    path: "/var/lib/rstudio-server"
    state: directory
    owner: "rstudio-server"
    group: "rstudio-server"
    mode: "0755"
  when: "'controller' in group_names"
  tags: [package, rstudio]

- name: Create /opt/modulefiles/rstudio-server directory for Lua modules
  become: true
  ansible.builtin.file:
    path: /opt/modulefiles/rstudio-server
    state: directory
    owner: root
    group: root
    mode: "755"
  when: "'controller' in group_names"
  tags: [package, rstudio]

- name: Create the Lua module file
  become: true
  ansible.builtin.copy:
    dest: "/opt/modulefiles/rstudio-server/{{ rstudio_version }}.lua"
    content: |
      whatis("Description: RStudio R IDE {{ rstudio_version }}")

      prepend_path("PATH", "/opt/apps/rstudio-server/{{ rstudio_version }}/bin")
    owner: "root"
    group: "root"
    mode: "644"
  when: "'controller' in group_names"
  tags: [package, rstudio]

- name: Ensure ood app directory exists
  become: true
  ansible.builtin.file:
    path: /var/www/ood/apps/sys/rstudio
    state: directory
    owner: root
    group: root
    mode: "0755"
  when: "'login' in group_names"
  tags: [package, rstudio, rstudio-ood]

- name: Clone RStudio example app
  become: true
  ansible.builtin.git:
    repo: https://github.com/OSC/bc_example_rstudio.git
    dest: /var/www/ood/apps/sys/rstudio
    version: master
    force: true
  when: "'login' in group_names"
  tags: [package, rstudio, rstudio-ood]

- name: Replay form template
  become: true
  ansible.builtin.template:
    src: rstudio/form.yml.erb.j2
    dest: /var/www/ood/apps/sys/rstudio/form.yml.erb
    owner: root
    group: root
    mode: "0644"
  when: "'login' in group_names"
  tags: [package, rstudio, rstudio-ood]

- name: Replace submit template
  become: true
  ansible.builtin.template:
    src: "rstudio/submit.yml.erb.j2"
    dest: "/var/www/ood/apps/sys/rstudio/submit.yml.erb"
    mode: "0644"
    owner: root
    group: root
  when: "'login' in group_names"
  tags: [package, rstudio, rstudio-ood]

- name: Deploy script.sh.erb from template
  become: true
  ansible.builtin.template:
    src: rstudio/script.sh.erb.j2
    dest: /var/www/ood/apps/sys/rstudio/template/script.sh.erb
    owner: root
    group: root
    mode: "0755"
  when: "'login' in group_names"
  tags: [package, rstudio, rstudio-ood]
